// Base colors
$white: hsl(0, 0%, 100%);
$purple: #4d014e;;
$red: hsl(354, 61%, 28%);
$coral: hsl(340, 54%, 52%);

// Base theme
$primary: $white;
$accent: $purple;
$error: $red;
$gradientFrom: $coral;
$gradientTo: $purple;

// Maps
$colors: (
  primary: $white,
  accent: (
    base: $accent,
    l5:  lighten($accent, 5%),
    l15: lighten($accent, 15%),
    l30: lighten($accent, 30%),
  ),
  error: (
    base: $error,
    l5:  lighten($error, 5%),
    l15: lighten($error, 15%),
    l30: lighten($error, 30%),
    l50: lighten($error, 50%),
    l70: lighten($error, 70%)
  ),
);

$px-units: (
  5: 5px,
  10: 10px,
  15: 15px,
  20: 20px,
  25: 25px,
  30: 30px,
);

$font-weights: (
  base: normal,
  l: 100,
  b: 500,
  xb: bolder
);

// based on html font-size 14px
$font-sizes-14: (
  base: 1rem, // 14px 
  14-sm: 0.8571rem, // 12px
  14-lg: 1.143rem, // 16px
  14-xl: 1.286rem, // 18px
  14-xxl: 2.286rem, // 32px
  14-xxl2: 2.571rem, // 36px
  14-xxl3: 2.856rem // 40px
);

// based on html font-size 16px
$font-sizes-16: (
  base: 1rem, // 16px
  16-sm: 0.75rem, // 12px
  16-md: 0.875rem, // 14px
  16-xl: 1.125rem, // 18px
  16-xxl: 2rem, // 32px
  16-xxl2: 2.25rem, // 36px
  16-xxl3: 2.5rem // 40px
);

// Generates a className based on map
// i.e:
//     .color{
//        @include modifiers($color, 'color', '--', '-')
//    }  
// generates a class with mapped values(as example map containing accent):
//  .color--accent { color: $accent }
//  ...   --accent-l5 { color: lighten($accent, 5%) }
//  ...   --accent-l10{ color: lighten($accent, 10%) }
//  ...   --accent-15 { color: lighten($accent, 15%) }
//
@mixin modifiers($map, $attribute, $prefix: '-', $separator: '-', $base: 'base') {
  @each $key, $value in $map {
    &#{if($key != $base, #{$prefix}#{$key}, '')} {
      @if type-of($value) == 'map' {
        @include modifiers($value, $attribute, $separator);
      }
      @else {
        #{$attribute}: $value;
      }
    }
  }
}

@mixin gradient--to-right($color1: $gradientFrom, $color2: $gradientTo ){
  background: $color1;
  background: -webkit-linear-gradient(to right, $color1, $color2) repeat-y; /* Chrome 10-25, Safari 5.1-6 */
  background: linear-gradient(to right, $color1, $color2) repeat-y; /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
}

@mixin gradient--to-top($color1: $gradientFrom, $color2: $gradientTo){
  background: $color1;
  background: -webkit-linear-gradient(to top, $color1, $color2) repeat-x; /* Chrome 10-25, Safari 5.1-6 */
  background: linear-gradient(to top, $color1, $color2) repeat-x; /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
}

@mixin placeholder {
  &::-webkit-input-placeholder {@content}
  &:-moz-placeholder           {@content}
  &::-moz-placeholder          {@content}
  &:-ms-input-placeholder      {@content}  
}

@mixin no-select {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

// Sublimes first letter
@mixin sublime-first-letter($color, $background-color){
  &::first-letter {
    color: $color;
    background-color: $background-color;
    border-top-left-radius: 10px;
    border-bottom-right-radius: 10px;
    font-size: 1.5rem;
    padding: 10px 12px;
    margin-right: 5px;
    margin-left: 10px;
  }
}